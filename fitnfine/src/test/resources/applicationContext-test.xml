<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		   http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
           http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd"
	default-autowire="byName">

	<!-- Scan for annotation based controllers -->
	<context:component-scan base-package="com.fitnfine" />
	<import resource="classpath:beans.xml" />
	<import resource="classpath:applicationContext-security.xml" />
	<context:property-placeholder location="classpath:test.jdbc.properties" />
	<cache:annotation-driven/>
	
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
		p:cacheManager-ref="ehCacheManagerFactoryBean" />

	<bean id="ehCacheManagerFactoryBean"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
		p:configLocation="classpath:ehcache.xml" p:shared="true" />
		
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.HSQLDialect
				hibernate.hbm2ddl.auto=create-drop
				hibernate.show_sql=false
				hibernate.format_sql=false
				hibernate.generate_statistics=true
				connection.provider_class=org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
				c3p0.max_size=100
				c3p0.min_size=1
				c3p0.idle_test_period=30
				hibernate.cache.use_second_level_cache=true
				hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				hibernate.cache.use_query_cache=true
				hibernate.cache.use_structured_entries=true
				hibernate.cache.generate_statistics=true
			</value>
		</property>
		<property name="annotatedClasses" ref="hibernateManagedEntities" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
		p:username="${jdbc.username}" p:password="${jdbc.password}" />


	<jdbc:initialize-database data-source="dataSource"
		ignore-failures="NONE">
		<jdbc:script location="${jdbc.initLocation}" />
		<jdbc:script location="${jdbc.dataLocation}" />
	</jdbc:initialize-database>

	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" read-only="true" />
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!--
		ensure that the above transactional advice runs for any execution of
		an operation defined by the Dao interface
	-->
	<aop:config>
		<aop:pointcut id="taServiceOperation"
			expression="execution(* com.fitnfine.dao.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="taServiceOperation" />
	</aop:config>
</beans>
